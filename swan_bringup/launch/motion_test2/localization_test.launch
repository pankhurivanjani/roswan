<?xml version="1.0"?>
<launch>
    <arg name="map_file" default="$(find swan_navigation)/maps/geo_fence.yaml" />
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
    <!-- GPS --> 
    <node pkg="nmea_navsat_driver" type="nmea_serial_driver" name="gps_driver">
        <param name="port" value="/dev/gps" />
        <param name="baud" value="4800" />
        <param name="frame_id" value="gps" />
    </node>

    <node pkg="swan_localization" type="sensor_odom_estimator" name="sensor_odom_estimator">
        <remap from="odom" to="odom1" />
        <rosparam>
            frame_id: odom
            child_frame_id: base_link
            publish_transform: false
            use_imu_orientation: true
            frequency: 20
            rot_covariance: 100
            use_map_frame: true
        </rosparam>
        <rosparam file="$(find swan_navigation)/maps/centre.yaml" command="load" />
    </node>

    
    <node pkg="swan_localization" type="dynamic_odom_estimator" name="dynamic_odom_estimator">
        <remap from="odom" to="odom2" />
        <rosparam>
            frequency: 20
            frame_id: odom
            child_frame_id: base_link
            send_transform: false
            sim_mode: false
            holonomic: false
            max_no_cmd_time: 0.5
            stop_cmd_duration: 0.2
        </rosparam>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 100" />

    <node pkg="tf" type="static_transform_publisher" name="compass_tf_publisher" args="0 0 0 0 0 0 base_link compass 100" />

    <node pkg="tf" type="static_transform_publisher" name="gps_tf_publisher" args="0 0 0 0 0 0 base_link gps 100" />
    
    <node pkg="robot_localization" type="ekf_localization_node" name="robot_pose_ekf" output="screen">
        <rosparam>
            frequency: 10
            sensor_timeout: 0.1
            two_d_mode: true
            odom_frame: odom
            base_link_frame: base_link
            world_frame: odom
            odom0: /odom1
            odom1: /odom2
            odom0_config: [true, true, false,
                           true, true, true,
                           true, true,  false,
                           false, false, false,
                           false, false, false]

            odom1_config:  [false, false, false,
                           false, false, false,
                           true,  false, false,
                           false, false, true,
                           false, false, false]

            odom0_queue_size: 20
            odom1_queue_size: 20
            publish_tf: true
        </rosparam>
        <remap from="odometry/filtered" to="odom" />
    </node>
</launch>
